barheight = 4, barwidth=.5,
override.aes = list(size = 0.3),
title = expression(paste("mg(CH"[4]*") m"^-2*" day"^-1)))) +
map_theme() +
ggtitle(title_string) +  #
theme(	legend.position=  c(0.01, 0.55),
plot.margin = unit(c(-2, -2, -2, 10), 'mm'))
return(robin_flux_mean_map)
}
# Panel A - Mean flux map
gcp_ltavg_robin_map <- make_saunois_mg_flux_map(gcp_1, 'GCP BU')
td_ltavg_robin_map <- make_saunois_mg_flux_map(td_1, 'GCP TD')
gcp_ltavg_robin_map
# FUNCTION THAT MAKES SAUNOIS FLUX MAP
# input: raster in WGS84 proj
make_saunois_mg_flux_map <- function(flux_mean, title_string) {
# Make saunois color scale & legend
source('plots/fcn/fcn_make_Saunois_scale.r')
# reformat rasters  for graph in ggplot
flux_mean_df <- WGSraster2dfROBIN(flux_mean)
names(flux_mean_df) <- c( 'x', 'y','layer')
flux_mean_df <- To.Saunois2020.Scale(flux_mean_df)
# Color palette replicating Saunois 2020
my_palette <- c(sequential_hcl(10, palette = 'YlOrRd'), 'grey90')
# /------------------------------------------------------------------------#
#/     Make map                                                      -------
robin_flux_mean_map <-
ggplot() +
# Background countries; grey in-fill
geom_polygon(data=countries_robin_df, aes(long, lat, group=group), color=NA, fill='grey90') +  # 'grey95'
# flux_mean grid
geom_raster(data=flux_mean_df, aes(x=x, y=y, fill=layer_cut)) +
# Coastline
geom_path(data=coastsCoarse_robin_df, aes(long, lat, group=group), color='black', size=0.08) +
# Outline
geom_path(data=bbox_robin_df, aes(long, lat, group=group), color='black', size=0.08) +
scale_fill_manual(values = my_palette, na.value='grey90') + # 'grey95'
coord_equal() +
guides(fill = guide_legend(keyheight=.5, keywidth=0.7,
barheight = 4, barwidth=.5,
override.aes = list(size = 0.3),
title = expression(paste("mg(CH"[4]*") m"^-2*" day"^-1)))) +
map_theme() +
ggtitle(title_string) +  #
theme(	legend.position=  c(0.01, 0.55),
plot.margin = unit(c(-2, -2, -2, 10), 'mm'))
return(robin_flux_mean_map)
}
# FUNCTION THAT MAKES SAUNOIS FLUX MAP
# input: raster in WGS84 proj
make_saunois_mg_flux_map <- function(flux_mean, title_string) {
# Make saunois color scale & legend
source('plots/fcn/fcn_make_Saunois_scale.r')
# reformat rasters  for graph in ggplot
flux_mean_df <- WGSraster2dfROBIN(flux_mean)
names(flux_mean_df) <- c( 'x', 'y','layer')
flux_mean_df <- To.Saunois2020.Scale(flux_mean_df)
# Color palette replicating Saunois 2020
my_palette <- c(sequential_hcl(10, palette = 'YlOrRd'), 'grey90')
# /------------------------------------------------------------------------#
#/     Make map                                                      -------
robin_flux_mean_map <-
ggplot() +
# Background countries; grey in-fill
geom_polygon(data=countries_robin_df, aes(long, lat, group=group), color=NA, fill='grey90') +  # 'grey95'
# flux_mean grid
geom_raster(data=flux_mean_df, aes(x=x, y=y, fill=layer_cut)) +
# Coastline
geom_path(data=coastsCoarse_robin_df, aes(long, lat, group=group), color='black', size=0.08) +
# Outline
geom_path(data=bbox_robin_df, aes(long, lat, group=group), color='black', size=0.08) +
scale_fill_manual(values = my_palette, na.value='grey90') + # 'grey95'
coord_equal() +
guides(fill = guide_legend(keyheight=.5, keywidth=0.7,
barheight = 4, barwidth=.5,
override.aes = list(size = 0.3),
title = expression(paste("mg(CH"[4]*") m"^-2*" day"^-1)))) +
map_theme() +
ggtitle(title_string) +  #
theme(	legend.position=  c(0.01, 0.55),
plot.margin = unit(c(-2, -2, -2, 10), 'mm'))
return(robin_flux_mean_map)
}
# Panel A - Mean flux map
gcp_ltavg_robin_map <- make_saunois_mg_flux_map(gcp_1, 'GCP BU')
td_ltavg_robin_map <- make_saunois_mg_flux_map(td_1, 'GCP TD')
gcp_ltavg_robin_map
td_ltavg_robin_map
# FUNCTION THAT MAKES SAUNOIS FLUX MAP
# input: raster in WGS84 proj
make_saunois_mg_flux_map <- function(flux_mean, title_string) {
# Make saunois color scale & legend
source('plots/fcn/fcn_make_Saunois_scale.r')
# reformat rasters  for graph in ggplot
flux_mean_df <- WGSraster2dfROBIN(flux_mean)
names(flux_mean_df) <- c( 'x', 'y','layer')
flux_mean_df <- To.Saunois2020.Scale(flux_mean_df)
# Color palette replicating Saunois 2020
my_palette <- c(sequential_hcl(10, palette = 'YlOrRd'), 'grey90')
# /------------------------------------------------------------------------#
#/     Make map                                                      -------
robin_flux_mean_map <-
ggplot() +
# Background countries; grey in-fill
geom_polygon(data=countries_robin_df, aes(long, lat, group=group), color=NA, fill='grey90') +  # 'grey95'
# flux_mean grid
geom_raster(data=flux_mean_df, aes(x=x, y=y, fill=layer_cut)) +
# Coastline
geom_path(data=coastsCoarse_robin_df, aes(long, lat, group=group), color='black', size=0.08) +
# Outline
geom_path(data=bbox_robin_df, aes(long, lat, group=group), color='black', size=0.08) +
scale_fill_manual(values = my_palette, na.value=NA) + # 'grey95'
coord_equal() +
guides(fill = guide_legend(keyheight=.5, keywidth=0.7,
barheight = 4, barwidth=.5,
override.aes = list(size = 0.3),
title = expression(paste("mg(CH"[4]*") m"^-2*" day"^-1)))) +
map_theme() +
ggtitle(title_string) +  #
theme(	legend.position=  c(0.01, 0.55),
plot.margin = unit(c(-2, -2, -2, 10), 'mm'))
return(robin_flux_mean_map)
}
# Panel A - Mean flux map
gcp_ltavg_robin_map <- make_saunois_mg_flux_map(gcp_1, 'GCP BU')
td_ltavg_robin_map <- make_saunois_mg_flux_map(td_1, 'GCP TD')
td_ltavg_robin_map
gcp_ltavg_robin_map
# upch4_025 <- raster('../output/results/grids/v04/m1/for_map/upch4_v04_m1_mgCH4m2day_Aw_mean_msk.tif') # 0.25
upch4_025 <- raster('../output/for_map/upch4_v04_m1_mgCH4m2day_Aw_mean_msk.tif') # 0.25
upch4_1   <- aggregate(upch4_025, fact=4, na.rm=TRUE, fun="mean")
upch4_1
plot(upch4_1[[1]])
# Get WAD2M AVERAGE GRID time-series
wad2m_ltavg <- raster('../../Chap3_holocene_global_wetland_loss/output/results/natwet/preswet/wad2m_Aw_mamax.tif')
# Get WAD2M AVERAGE GRID time-series for masking
wad2m_ltavg <- raster('../../Chap3_holocene_global_wetland_loss/output/results/natwet/preswet/wad2m_Aw_mamax.tif')
wad2m_ltavg_1 <- aggregate(wad2m_ltavg, fact=2, na.rm=TRUE, fun="mean")
# Get WAD2M AVERAGE GRID time-series for masking
wad2m_ltavg <- raster('../../Chap3_holocene_global_wetland_loss/output/results/natwet/preswet/wad2m_Aw_mamax.tif')
getwd()
# Get WAD2M AVERAGE GRID time-series for masking
wad2m_ltavg <- raster('../../Chap3_wetland_loss/output/results/natwet/preswet/wad2m_Aw_mamax.tif')
wad2m_ltavg_1 <- aggregate(wad2m_ltavg, fact=2, na.rm=TRUE, fun="mean")
wad2m_ltavg_1
gcp_1 <- aggregate(gcp_ltavg, fact=2, na.rm=TRUE, fun="mean")
# /----------------------------------------------------------------
#/    Get GCP model ltavg
gcp_ltavg  <- raster("../output/comparison/gcp_models/avg/gcp_ltavg_mgCH4m2day_2010_2017.tif")
gcp_1 <- aggregate(gcp_ltavg, fact=2, na.rm=TRUE, fun="mean")
gcp_1 <- mask(gcp_1, wad2m_ltavg_1)
gcp_1
wad2m_ltavg_1
wad2m_ltavg_1 <- aggregate(wad2m_ltavg, fact=2, na.rm=TRUE, fun="mean")
# /----------------------------------------------------------------
#/    Get GCP model ltavg
gcp_ltavg  <- raster("../output/comparison/gcp_models/avg/gcp_ltavg_mgCH4m2day_2010_2017.tif")
gcp_1 <- aggregate(gcp_ltavg, fact=2, na.rm=TRUE, fun="mean")
gcp_1 <- mask(gcp_1, wad2m_ltavg_1)
wad2m_ltavg_1
# Get WAD2M AVERAGE GRID time-series for masking
wad2m_ltavg <- raster('../../Chap3_wetland_loss/output/results/natwet/preswet/wad2m_Aw_mamax.tif')
wad2m_ltavg_1 <- aggregate(wad2m_ltavg, fact=4, na.rm=TRUE, fun="mean")
# /----------------------------------------------------------------
#/    Get GCP model ltavg
gcp_ltavg  <- raster("../output/comparison/gcp_models/avg/gcp_ltavg_mgCH4m2day_2010_2017.tif")
gcp_1 <- aggregate(gcp_ltavg, fact=2, na.rm=TRUE, fun="mean")
gcp_1 <- mask(gcp_1, wad2m_ltavg_1)
gcp_1 <- crop(gcp_1, extent(-180, 180, -56, 86))
# /----------------------------------------------------------------------------#
#/   Get TD inversion
td_1  <- raster("../output/comparison/inversions/td_ltavg_mgCH4m2day_2010_2017.tif")
td_1 <- mask(td_1, wad2m_ltavg_1)
td_1 <- crop(td_1, extent(-180, 180, -56, 86))
# /----------------------------------------------------------------------------#
#/   Calculate difference between BU and TD
gcp_td_diff_1 <- gcp_1 - td_1
gcp_td_diff_1 <- crop(gcp_td_diff_1, extent(-180, 180, -56, 86))
# /----------------------------------------------------------------------------#
#/   Make boxes of Siberia and HBL
library(sp)
SI <- Polygon(cbind(x=c(59, 90, 90, 59, 59), y=c(56, 56, 74, 74, 56)))
HBL <- Polygon(cbind(x=c(-101, -79, -79, -101, -101), y=c(50, 50, 59, 59, 50)))
Pls <- Polygons(list(SI, HBL), ID='SI_HBL')
SPls <- SpatialPolygons(list(Pls))
crs(SPls) =  CRS("+init=epsg:4326")
SPDF_robin <- spTransform(SPls, CRS("+proj=robin"))
SPDF_robin_df <- fortify(as(SPDF_robin, 'SpatialPolygonsDataFrame'))
# /----------------------------------------------------------------------------#
#/    Make maps
td1_diff_map  <- diff_map_function(gcp_td_diff_1, 'Bottom-Up - Top-down')
td1_diff_map
# Panel A - Mean flux map
gcp_ltavg_robin_map <- make_saunois_mg_flux_map(gcp_1, 'GCP BU')
td_ltavg_robin_map <- make_saunois_mg_flux_map(td_1, 'GCP TD')
gcp_ltavg_robin_map
td_ltavg_robin_map
td_ltavg_robin_map
td_bu_diff_maps <- plot_grid(gcp_ltavg_robin_map,
td_ltavg_robin_map,
td1_diff_map,
ncol=1,
align='hv',
labels = c('A','B','C'))
#/ Save to file
ggsave('../output/figures/diff_map/td_bu_diff_map_v56_3panels.pdf',
td_bu_diff_maps,
width=180, height=300, dpi=400, units='mm')
getwd()
# /----------------------------------------------------------------------------#
#/ GIEMSv2; reprojected in WGS84; 288 months ; 24 years (1992-2015)
giems2_a <- stack('../../Chap3_holocene_global_wetland_loss/output/results/natwet/preswet/giems2_aw_v3.tif')[[109:288]]
108/12
getwd
library(terra)
getwd()
# /----------------------------------------------------------------------------#
#/ GIEMSv2; reprojected in WGS84; Originally 288 months, 24 years (1992-2015)
#  Subset to 2000-2015
giems2_aw <- rast('../../Chap3_wetland_loss/output/results/natwet/preswet/giems2_aw_v3.tif')[[97:288]] #[[109:288]]
# Get pixel area
pixarea <- cellSize(giems2_aw, mask=FALSE) / 10^6
# Convert Aw back to Fw
giems2_fw <- giems2_aw / pixarea
giems2_fw[giems2_fw>1] <- 1 # Set ceiling value of 1
# /----------------------------------------------------------------------------#
#/   Compute GIEMSv2 yearly max                            -------------
# Make group label list; labels rasters from same timestep together
groupn = function(n,m){rep(1:m,rep(n/m,m))}
nlay <- length(names(giems2_fw))
# Make list of group labels
timestep_grp = groupn(nlay, nlay/12 )
f = function(x){tapply(x, timestep_grp, max, na.rm=T)}
# Calculate annual maximum
giems2_fw_mamax <- app(giems2_fw, fun=f)
# giems2_fw_mamax <- mean(giems2_fw_mamax, na.rm=T)
giems2_fw_mamax[giems2_fw_mamax>1] <- 1 # Set ceiling value of 1
giems2_fw_mamax[!is.finite(giems2_fw_mamax)] <- NA # 1
# /----------------------------------------------------------------------------#
#/   Get Correction layers (fmax)
caff <- rast('../../Chap3_wetland_loss/data/natwet/wad2m/wad2m_corr_layers_v2/ArcticCouncil_fraction_025deg.nc')
cifor <- rast('../../Chap3_wetland_loss/data/natwet/wad2m/wad2m_corr_layers_v1/cifor_wetlands_area_025deg_frac.nc')
glwd <- rast('../../Chap3_wetland_loss/data/natwet/wad2m/wad2m_corr_layers_v1/GLWD_wetlands_025deg_frac.nc')
glwd <- crop(glwd, extent(-180, 180, 40, 60)) # Crop GLWD to only temperate latitudes outside of CIFOR & NCSCD
glwd <- crop(glwd, ext(-180, 180, 40, 60)) # Crop GLWD to only temperate latitudes outside of CIFOR & NCSCD
glwd <- extend(glwd, extent(-180, 180, -90, 90)) #, value=NA)
glwd <- extend(glwd, ext(-180, 180, -90, 90)) #, value=NA)
#/  Assemble three correction factor inputs into a single layer
corr_fmax <- c(caff, cifor, glwd)
corr_fmax <- max(corr_fmax, na.rm=T)
# corr_fmax[corr_fmax>1] <- 1
# /----------------------------------------------------------------------------#
#/  CORRECTION FACTOR
# Calculate fw correction factor; a factor for the long term max
# Apply 0 to pixels where giems_max > fwmax
# fwcorr <- overlay(corr_fmax, giems2_fw_mamax, fun = function(x, y) {z <- x/y; z[z<1] <- 1; z})
# fwcorr <- lapp(c(corr_fmax, giems2_fw_mamax), fun = function(x, y) {z <- x/y; z[z<1] <- 1; z})
fwcorr <- corr_fmax / giems2_fw_mamax
fwcorr[fwcorr<1] <- 1
fwcorr[is.na(fwcorr)] <- 1
fwcorr[!is.finite(fwcorr)] <- NA # 1
# fwcorr[fwcorr>20] <- 20  # Set ceiling of scaling factor
# plot(fwcorr[[7]])
# hist(fwcorr)
# /----------------------------------------------------------------------------#
#/  APPLY CORRECTION FACTOR
# apply Fmax correction factor; producing corrected annual maximum
giems2_fw_mamax_corr <- giems2_fw_mamax * fwcorr
giems2_fw_mamax_corr[is.na(giems2_fw_mamax_corr)] <- 0
### Get seasonal scalar
# repeat layers
giems2_fw_mamax_rep <- giems2_fw_mamax[[timestep_grp]]
# Get monthly scalar; fraction of that year's maximum
giems2_fw_monthscalar = giems2_fw / giems2_fw_mamax_rep
# Apply seasonal scalar to each year
giems2_fw_mamax_corr_rep <- giems2_fw_mamax_corr[[timestep_grp]]
giems2_fw_corr <- giems2_fw_mamax_corr_rep * giems2_fw_monthscalar
# Force within 0-1 range
# giems2_fw_corr[giems2_fw_corr<0] <- 0
# giems2_fw_corr[!is.finite(giems2_fw_corr)] <- 1
# giems2_fw_corr[giems2_fw_corr>1] <- 1
# /----------------------------------------------------------------------------#
#/  Get static correction layer
# RICE COVERAGE  - 12 months
mirca <- rast('../../Chap3_wetland_loss/data/natwet/wad2m/wad2m_corr_layers_v1/MIRCA_monthly_irrigated_rice_area_025deg_frac.nc')
# Repeat annual MIRCA cycle
mirca <- rep(mirca, 16)
# COASTLINE WATER - STATIC
#2. Note: SWAMPS already has ocean removed (in early/late versions), and so we use the MODIS ocean to remove ocean from JRC prior to agregating JRC
MODIS_coast <- rast('../../Chap3_wetland_loss/data/natwet/wad2m/wad2m_corr_layers_v1/MODIS_coastal_mask_0.25deg.nc')
# in V2 openwater is combination of GRWL and HydroLAKES
openwater <- rast('../../Chap3_wetland_loss/data/natwet/wad2m/wad2m_corr_layers_v2/Global_GRWL_HydroLakes_025deg_WGS84_fraction.nc')#[[13:192]]
# /----------------------------------------------------------------------------#
#/   Apply subtractions
# No longer subtracting MODIS ocean because Prigent 2019 says coastal contamination is no longer a problem.
# - MODIS_coast
giems2_fw_corr_final <- giems2_fw_corr - mirca  - openwater
# Force within 0-1 range
giems2_fw_corr_final[giems2_fw_corr_final<0] <- 0
# /----------------------------------------------------------------------------#
#/  CORRECTION FACTOR
# Calculate fw correction factor; a factor for the long term max
# Apply 0 to pixels where giems_max > fwmax
# fwcorr <- overlay(corr_fmax, giems2_fw_mamax, fun = function(x, y) {z <- x/y; z[z<1] <- 1; z})
# fwcorr <- lapp(c(corr_fmax, giems2_fw_mamax), fun = function(x, y) {z <- x/y; z[z<1] <- 1; z})
fwcorr <- corr_fmax / giems2_fw_mamax
fwcorr[fwcorr<1] <- 1
fwcorr[is.na(fwcorr)] <- 1
fwcorr[!is.finite(fwcorr)] <- NA # 1
# fwcorr[fwcorr>20] <- 20  # Set ceiling of scaling factor
# plot(fwcorr[[7]])
# hist(fwcorr)
# /----------------------------------------------------------------------------#
#/  APPLY CORRECTION FACTOR
# apply Fmax correction factor; producing corrected annual maximum
giems2_fw_mamax_corr <- giems2_fw_mamax * fwcorr
giems2_fw_mamax_corr[is.na(giems2_fw_mamax_corr)] <- 0
### Get seasonal scalar
# repeat layers
giems2_fw_mamax_rep <- giems2_fw_mamax[[timestep_grp]]
# Get monthly scalar; fraction of that year's maximum
giems2_fw_monthscalar = giems2_fw / giems2_fw_mamax_rep
# Apply seasonal scalar to each year
giems2_fw_mamax_corr_rep <- giems2_fw_mamax_corr[[timestep_grp]]
giems2_fw_corr <- giems2_fw_mamax_corr_rep * giems2_fw_monthscalar
# Force within 0-1 range
# giems2_fw_corr[giems2_fw_corr<0] <- 0
# giems2_fw_corr[!is.finite(giems2_fw_corr)] <- 1
# giems2_fw_corr[giems2_fw_corr>1] <- 1
# /----------------------------------------------------------------------------#
#/  Get static correction layer
# RICE COVERAGE  - 12 months
mirca <- rast('../../Chap3_wetland_loss/data/natwet/wad2m/wad2m_corr_layers_v1/MIRCA_monthly_irrigated_rice_area_025deg_frac.nc')
# Repeat annual MIRCA cycle
mirca <- rep(mirca, 16)
# COASTLINE WATER - STATIC
#2. Note: SWAMPS already has ocean removed (in early/late versions), and so we use the MODIS ocean to remove ocean from JRC prior to agregating JRC
MODIS_coast <- rast('../../Chap3_wetland_loss/data/natwet/wad2m/wad2m_corr_layers_v1/MODIS_coastal_mask_0.25deg.nc')
# in V2 openwater is combination of GRWL and HydroLAKES
openwater <- rast('../../Chap3_wetland_loss/data/natwet/wad2m/wad2m_corr_layers_v2/Global_GRWL_HydroLakes_025deg_WGS84_fraction.nc')#[[13:192]]
# /----------------------------------------------------------------------------#
#/   Apply subtractions
# No longer subtracting MODIS ocean because Prigent 2019 says coastal contamination is no longer a problem.
# - MODIS_coast
giems2_fw_corr_final <- giems2_fw_corr - mirca  - openwater
# Force within 0-1 range
giems2_fw_corr_final[giems2_fw_corr_final<0] <- 0
# /----------------------------------------------------------------------------#
#/    Save to file
library(lubridate)
names(giems2_fw_corr_final) <- paste0('X', seq(ymd('2000-01-15'), ymd('2015-12-15'), by='1 month'))
#seq(1, nlyr(giems2_fw_corr_final)))
writeRaster(giems2_fw_corr_final, '../output/giems2_corr_v2_july2023.tif', overwrite=T)
# /----------------------------------------------------------------------------#
#/ GIEMSv2 Corrected V2 - July 2023
giems2_corr_v2_july2023 <- rast('../output/giems2_corr_v2_july2023.tif')
giems2_corr_v2_july2023 <- giems2_corr_v2_july2023 * cellSize(giems2_corr_v2_july2023[[1]], mask=FALSE) / 10^6
giems2_corr_v2_july2023_sum <- global(giems2_corr_v2_july2023, sum, na.rm=T)/10^6
giems2_corr_v2_july2023_sum <- giems2_corr_v2_july2023_sum %>%
rename(giems2_corr_v2_july2023 = sum) %>%
mutate(date = giems2_dates_2000start)
library(dplyr)
# /----------------------------------------------------------------------------#
#/  Combine all tables
library(purrr)
comb_sums <- purrr::reduce(list(giems2_aw_na_sum,
giems2_corr_v1_2021_sum,
giems2_corr_v1_2023_sum, # giems2_corr_v1_2023a_sum,
giems2_corr_v2_sum,
giems2_corr_v2_july2023_sum,
wad2m_v1_sum, wad2m_v2_sum),
dplyr::full_join,
by = 'date')
setwd("/Users/efluet/Library/CloudStorage/Dropbox/upch4/scripts")
# /----------------------------------------------------------------------------#
#/  Create data lists
giems2_dates <- seq(as.Date("2001-01-01"), as.Date("2015-12-01"), by="months")
giems2_dates_2000start <- seq(as.Date("2000-01-01"), as.Date("2015-12-01"), by="months")
wad2m_v1_dates <- seq(as.Date("2000-01-01"), as.Date("2018-12-01"), by="months")
wad2m_v2_dates <- seq(as.Date("2000-01-01"), as.Date("2020-12-01"), by="months")
# /----------------------------------------------------------------------------#
#/ Original GIEMSv2
giems2_aw_na <- rast('../../Chap3_wetland_loss/output/results/natwet/preswet/giems2_aw_v3_na.tif')[[109:288]]
giems2_aw_na_sum <- global(giems2_aw_na, sum, na.rm=T)/10^6
giems2_aw_na_sum <- giems2_aw_na_sum %>%
rename(giems2_aw_original = sum) %>%
mutate(date = giems2_dates)
# /----------------------------------------------------------------------------#
#/ GIEMSv2 Corrected V1 2021
giems2_corr_v1_2021 <- rast('../data/giems2_corr.tif')
giems2_corr_v1_2021_sum <- global(giems2_corr_v1_2021, sum, na.rm=T)/10^6
giems2_corr_v1_2021_sum <- giems2_corr_v1_2021_sum %>%
rename(giems2_corr_v1_2021 = sum) %>%
mutate(date = giems2_dates)
# /----------------------------------------------------------------------------#
#/ GIEMSv2 Corrected V1 2023
giems2_corr_v1_2023 <- rast('../output/giems2_corr_v1_2023.tif')
giems2_corr_v1_2023_sum <- global(giems2_corr_v1_2023, sum, na.rm=T)/10^6
giems2_corr_v1_2023_sum <- giems2_corr_v1_2023_sum %>%
rename(giems2_corr_v1_2023 = sum) %>%
mutate(date = giems2_dates)
# /----------------------------------------------------------------------------#
#/ GIEMSv2 Corrected V1 2023a. - same as 2023 but without cap on Corr_factor
giems2_corr_v1_2023a <- rast('../output/giems2_corr_v1_2023a.tif')
giems2_corr_v1_2023a_sum <- global(giems2_corr_v1_2023a, sum, na.rm=T)/10^6
giems2_corr_v1_2023a_sum <- giems2_corr_v1_2023a_sum %>%
rename(giems2_corr_v1_2023a = sum) %>%
mutate(date = giems2_dates)
# /----------------------------------------------------------------------------#
#/ GIEMSv2 Corrected V2
giems2_corr_v2 <- rast('../output/giems2_corr_v2_2023.tif')
giems2_corr_v2_sum <- global(giems2_corr_v2, sum, na.rm=T)/10^6
giems2_corr_v2_sum <- giems2_corr_v2_sum %>%
rename(giems2_corr_v2 = sum) %>%
mutate(date = giems2_dates)
# /----------------------------------------------------------------------------#
#/ GIEMSv2 Corrected V2 - July 2023
giems2_corr_v2_july2023 <- rast('../output/giems2_corr_v2_july2023.tif')
giems2_corr_v2_july2023 <- giems2_corr_v2_july2023 * cellSize(giems2_corr_v2_july2023[[1]], mask=FALSE) / 10^6
giems2_corr_v2_july2023_sum <- global(giems2_corr_v2_july2023, sum, na.rm=T)/10^6
giems2_corr_v2_july2023_sum <- giems2_corr_v2_july2023_sum %>%
rename(giems2_corr_v2_july2023 = sum) %>%
mutate(date = giems2_dates_2000start)
# /----------------------------------------------------------------------------#
#/ WAD2M V1
wad2m_v1 <- rast('../../Chap3_wetland_loss/data/natwet/wad2m/gcp-ch4_wetlands_2000-2018_025deg.nc')
wad2m_v1 <- wad2m_v1 * cellSize(wad2m_v1, mask=FALSE) / 10^6
wad2m_v1_sum <- global(wad2m_v1, sum, na.rm=T)/10^6
wad2m_v1_sum <- wad2m_v1_sum %>%
rename(wad2m_v1 = sum) %>%
mutate(date = wad2m_v1_dates)
# /----------------------------------------------------------------------------#
#/ WAD2M V2
wad2m_v2 <- rast('../../Chap3_wetland_loss/data/natwet/wad2m/WAD2M_wetlands_2000-2020_025deg_Ver2.0.nc')
wad2m_v2 <- wad2m_v2 * cellSize(wad2m_v2, mask=FALSE) / 10^6
wad2m_v2_sum <- global(wad2m_v2, sum, na.rm=T)/10^6
wad2m_v2_sum <- wad2m_v2_sum %>%
rename(wad2m_v2 = sum) %>%
mutate(date = wad2m_v2_dates)
# /----------------------------------------------------------------------------#
#/  Combine all tables
library(purrr)
comb_sums <- purrr::reduce(list(giems2_aw_na_sum,
giems2_corr_v1_2021_sum,
giems2_corr_v1_2023_sum, # giems2_corr_v1_2023a_sum,
giems2_corr_v2_sum,
giems2_corr_v2_july2023_sum,
wad2m_v1_sum, wad2m_v2_sum),
dplyr::full_join,
by = 'date')
comb_sums <- comb_sums %>%
pivot_longer(cols=c(giems2_aw_original,
giems2_corr_v1_2021,
giems2_corr_v1_2023,
giems2_corr_v2,
giems2_corr_v2_july2023,
wad2m_v1, wad2m_v2),
names_to='source',
values_to='area')
library(tidyverse)
#  Load packages & misc functions
source('./prep/load_packages.r')
# /----------------------------------------------------------------------------#
#/  Combine all tables
library(purrr)
comb_sums <- purrr::reduce(list(giems2_aw_na_sum,
giems2_corr_v1_2021_sum,
giems2_corr_v1_2023_sum, # giems2_corr_v1_2023a_sum,
giems2_corr_v2_sum,
giems2_corr_v2_july2023_sum,
wad2m_v1_sum, wad2m_v2_sum),
dplyr::full_join,
by = 'date')
comb_sums <- comb_sums %>%
pivot_longer(cols=c(giems2_aw_original,
giems2_corr_v1_2021,
giems2_corr_v1_2023,
giems2_corr_v2,
giems2_corr_v2_july2023,
wad2m_v1, wad2m_v2),
names_to='source',
values_to='area')
# /----------------------------------------------------------------------------#
#/ Make lineplot
ggplot(comb_sums) +
geom_line(aes(x=date, y=area, color=source), size=.5) +
# geom_point(aes(x=time, y=area/10^6, color=source), size=.5) +
scale_y_continuous(limits=c(0, 6), expand=c(0, 0) ) +
scale_x_date(expand=c(0, 0)) + #, labels=as.Date.character(dates)) +
# scale_color_brewer(palette='Set2') +
scale_color_manual(values=c('giems2_aw_original'='grey60',
'giems2_corr_v1_2021'='#ffadb0',
'giems2_corr_v1_2023'='#ff2931',
# 'giems2_corr_v1_2023a'='green',
'giems2_corr_v2'='#730004',
'giems2_corr_v2_july2023'='#ca16de',
'wad2m_v1'='#9c99ff',
'wad2m_v2'='#06008a')) +
xlab('Date') + ylab('Global monthly wetland area (Mkm2)') +
theme_bw() +
theme(legend.position = 'right',
legend.title = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(color='grey90', size=0.1))
ggsave('../output/figures/lineplot_monthly_Aw_corr_comparison_july2023.png',
width=300, height=160, dpi=300, units='mm')
dev.off()
writeCDF(giems2_fw_corr_final, '../output/giems2_corr_v2_july2023.nc', 'Fw', longname="wetland fraction", unit="")
writeCDF(giems2_fw_corr_final, '../output/giems2_corr_v2_july2023.nc', 'Fw', longname="wetland fraction", unit="", compression=7, overwrite=T)
writeCDF(giems2_fw_corr_final, '../output/giems2_corr_v2_july2023.nc', 'Fw',
longname="wetland fraction", unit="", compression=9, overwrite=T)
