{
    "collab_server" : "",
    "contents" : "# import libraries\nlibrary(raster)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\n\nlibrary(here)\nhere()\n\n\n\n#===============================================================================\n\n# List the files in the directory\nl <- list.files(path = \"../data/bioclim\", pattern = \".tif\", full.names = TRUE)\n\n# Create empty stack, to which we'll append\nbioclim_stack <- stack()\n\n# Read raster, and add to stack.\ns <- raster::stack(l)\n\n# Crop the stack, to remove antarctica\naoi = extent(c(xmin=-180, xmax=180, ymin=-58, ymax=90))\ns <- crop(s, aoi)\n\n\n# reformat rasters  for graph in ggplot\nsdf <- as.data.frame( as(s, \"SpatialPixelsDataFrame\") )\n\n\n\n#===============================================================================\n\n# Read in towers\ntowers <- read.csv(\"../data/towers/BAMS_site_coordinates.csv\")\n\n# get coordinates\npts_coords <- cbind(towers$Longitude, towers$Latitude)\n# make spatial object\ntowers_pts <- SpatialPointsDataFrame(pts_coords, towers)\ncrs(towers_pts) <- crs(lst_day)\n\ntowers_pts_df <- data.frame(towers_pts)\n\n\n#==============================================================================\n\n# Extract pixel values at towers\ntowers_pts_df <- cbind(towers_pts_df, raster::extract(s, towers_pts))\n\n\n#===============================================================================\n#  Cumulative plot\n\n\n# Randomly select rows\nsdf <- sdf[sample(nrow(sdf), 500), ]\n\n# Change table format from wide to long; the reason for this is to plot \nsdf2 <- sdf %>% gather(key=bioclim_var, value=value, wc2.0_bio_5m_01:wc2.0_bio_5m_11)\ntowers_pts_df2 <- towers_pts_df %>% gather(key=bioclim_var, value=value, wc2.0_bio_5m_01:wc2.0_bio_5m_11)\n\n\n\nggplot() +\n  stat_ecdf(data=towers_pts_df2, aes(x=value), color='red', geom=\"step\")+\n  stat_ecdf(data=sdf2, aes(x=value), color='blue',geom=\"step\")+\n\n  xlab(\"\") + ylab(\"Cumulative frequency\") + \n    \n  facet_wrap(~ bioclim_var)\n\n\n\nggsave(\"../output/figures/cumul_plot_histogram_bioclim.png\",\n       width=180, height=160, dpi=600, units=\"mm\")\ndev.off()\n\n\n\n#===============================================================================\n# calculate distance of one tower to the grid\n\n\n# Loop through tower\nfor (t in 1:nrow(towers_pts_df)){\n\n    \n  # Select a tower\n  tower <- towers_pts_df[t, ]\n  \n  # Calculate eucledian distance to all other pixels\n  dist <- data.frame(((lst_df$lst_day - tower$lst_day)^2 +  (lst_df$lst_night - tower$lst_night)^2 )^(1/2))\n  names(dist) <- as.character(tower$ID)\n  \n  \n  # append distance column to df\n  lst_df <- cbind(lst_df, dist)\n  \n\n}\n\n\n#===============================================================================\n\n# Get minimum distance at each pixel on earth, from the network of towers.\nlst_df$min_dist <- apply(lst_df[,5:54] , 1, min, na.rm=TRUE)\n\n# Get which tower ID has the minimum distance\nlst_df$closest_tower <-  as.character(c(apply(lst_df[,5:54] , 1, which.min)))\n\n\n\n#===============================================================================\n# Map towers over the LST\n\nggplot() +\n  geom_tile(data=lst_df, aes(x=x, y=y, fill=min_dist)) +\n  geom_point(data=towers_pts_df, aes(x=Longitude, y= Latitude), color='red')\n\n\n  \nggplot() +\n  geom_tile(data=lst_df, aes(x=x, y=y, fill=as.factor(closest_tower))) +\n  geom_text(data=towers_pts_df, aes(x=Longitude, y= Latitude, label=ID)) +\n  geom_point(data=towers_pts_df, aes(x=Longitude, y= Latitude), color='black')\n  \n\n## For histogram, set order of bars\nsurv_data$hces_surv_asprcfao_cut <- factor(surv_data$hces_surv_asprcfao_cut, levels = lengend_order)\n\nggplot(lst_df)+\n  geom_histogram(aes(x=closest_tower, fill=closest_tower), stat=\"count\") +\n  coord_flip()\n\n\nggsave(\"../output/figures/histo_lst_daytime.png\",\n       width=140, height=90, dpi=400, units=\"mm\")\ndev.off()\n\n\n\n\n\n\n#===============================================================================\n# # Open the RDS stacks\n# lst_day <- readRDS(\"../data/modis_processed/LST_Day_CMG_stack.rds\")\n# lst_night <- readRDS(\"../data/modis_processed/LST_Night_CMG_stack.rds\")\n# \n# # Subset (now it's only a single raster)\n# lst_day <- mean(lst_day, na.rm=1) \n# lst_night <- mean(lst_night, na.rm=1)\n# \n# aoi = extent(c(xmin=-180, xmax=180, ymin=-58, ymax=90))\n# lst_night <- crop(lst_night, aoi)\n# lst_day <- crop(lst_day, aoi)\n#   \n#  \n# # stack grids\n# lst = stack(lst_day, lst_night)\n# names(lst) <- c(\"lst_day\", \"lst_night\")\n",
    "created" : 1564000639207.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3789183014",
    "id" : "83B0F0C5",
    "lastKnownWriteTime" : 1564000680,
    "last_content_update" : 1564000680251,
    "path" : "C:/Users/efluet/Dropbox/upch4/scripts/sesur_project_start.r",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}