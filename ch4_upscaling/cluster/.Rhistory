legend.text=element_text(size=40),
plot.title = element_text(hjust = 0.5, face="bold", size = 40),
legend.key.size = unit(10, "mm"),
axis.line = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) }
#ani.options("convert")
saveGIF({
# loop through hyde years ======================================================
for (t in 1:(length(names(flux_stack)))){
# #  percentage wetland
flux <- as(flux_stack[[t]], "SpatialPixelsDataFrame")
flux <- as.data.frame(flux)
names(flux) <- c("layer","x","y")
#flux <- flux[flux$layer > 0,]
#flux$layer <- flux$layer * 100
# # convert to discontinuous
my_breaks =  c(-8,-1,-0.5, -0.25,0, 0.25, 0.5, 1, 2)  # seq(-10, 10, 0.5)
flux$layer <- cut(flux$layer, breaks = my_breaks, dig.lab=10)
#
# # replace the categories stings to make them nicer in the legend
flux$layer <- gsub("\\(|\\]", "", flux$layer)
flux$layer <- gsub("\\,", " - ", flux$layer)
# surv_data <- surv_data %>% mutate(hces_surv_asprcfao_cut=ifelse(hces_surv_asprcfao_cut=="400 to 500000",
#                                                                 "over 400",hces_surv_asprcfao_cut))
# surv_data <- surv_data %>% mutate(hces_surv_asprcfao_cut=ifelse(hces_surv_asprcfao_cut=="-10000 to 0",
#                                                                 "Negative",hces_surv_asprcfao_cut))
flux$layer <- factor(flux$layer , levels=rev(c("-8 - -1", "-1 - -0.5", "-0.5 - -0.25",
"-0.25 - 0",  "0.25 - 0.5", "0.5 - 1", "1 - 2")))
wetplot <- ggplot() +
# background countries
#geom_polygon(data=countries_wgs84_df, aes(long, lat, group=group) , fill="grey90") +
# Fw grid
geom_tile(data=flux, aes(x=x, y=y, fill=layer)) +
# country outlines
geom_path(data=countries_wgs84_df, aes(long, lat, group=group), color='black', size=0.01) +
# Tower sites
geom_point(data=bams_towers, aes(Longitude, Latitude), color='black', fill= "red", shape=21,  size=5) +
ggtitle(parse_date_time(str_sub(names(flux_stack[[t]]),2,11), 'ymd')) +
#geom_text(aes(x=-50, y=-10)) +
labs(title = paste("CH4 emission", str_sub(names(flux_stack[[t]]),2,11), 'ymd'),
#subtitle = "U",
caption = "Uscaled from eddy covariance flux towers.\nNote: only showing pixels with >1% wetland area")+
scale_x_continuous(limits=c(-180, 180)) +
scale_y_continuous(limits=c(-60, 80)) +
guides(fill = guide_legend(title = expression(paste("g m"^-2, " month"^-1)))) +
guides(shape = guide_legend(override.aes = list(size = 10))) +
coord_equal() +
gif_map_theme() +
scale_fill_brewer(palette='PRGn') +
# scale_fill_distiller(palette='PRGn', breaks= c(-6, -1, -0.5, -0.1, 0, 0.1, 0.5, 1, 6)) +
#scale_fill_distiller(palette='PRGn', breaks= c(-6, -1, -0.5, -0.1, 0, 0.1, 0.5, 1, 6)) +
# palette='YlOrRd', direction=1,
#scale_fill_manual(values = colorRampPalette(brewer.pal(12, "YlOrRd"))(10), limits = c(-6, 2, 0.5)) +
theme(legend.position=c(0.1, 0.3))
show(wetplot)
}
},  movie.name = "../../output/figures/gif/comparison_up01_lpjmerra.gif", ani.width=2000, ani.height=1000, interval = 0.8, clean=TRUE)
dev.off()
# prep gif plottin theme         ----------------------------------------------------
gif_map_theme <- function(base_size=48){
theme_minimal() +
theme(legend.position=c(0.1, 0.4),
#legend.title = element_blank(),
legend.key.height = unit(20, "mm"),
#legend.key.size = unit(20, "mm"),
legend.title=element_text(size=40),
legend.text=element_text(size=40),
plot.title = element_text(hjust = 0.5, face="bold", size = 40),
legend.key.size = unit(10, "mm"),
axis.line = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) }
#ani.options("convert")
saveGIF({
# loop through hyde years ======================================================
for (t in 1:(length(names(flux_stack)))){
# #  percentage wetland
flux <- as(flux_stack[[t]], "SpatialPixelsDataFrame")
flux <- as.data.frame(flux)
names(flux) <- c("layer","x","y")
#flux <- flux[flux$layer > 0,]
#flux$layer <- flux$layer * 100
# # convert to discontinuous
my_breaks =  c(-8,-1,-0.5, -0.25,0, 0.25, 0.5, 1, 2)  # seq(-10, 10, 0.5)
flux$layer <- cut(flux$layer, breaks = my_breaks, dig.lab=10)
#
# # replace the categories stings to make them nicer in the legend
flux$layer <- gsub("\\(|\\]", "", flux$layer)
flux$layer <- gsub("\\,", " - ", flux$layer)
# surv_data <- surv_data %>% mutate(hces_surv_asprcfao_cut=ifelse(hces_surv_asprcfao_cut=="400 to 500000",
#                                                                 "over 400",hces_surv_asprcfao_cut))
# surv_data <- surv_data %>% mutate(hces_surv_asprcfao_cut=ifelse(hces_surv_asprcfao_cut=="-10000 to 0",
#                                                                 "Negative",hces_surv_asprcfao_cut))
flux$layer <- factor(flux$layer , levels=rev(c("-8 - -1", "-1 - -0.5", "-0.5 - -0.25",
"-0.25 - 0",  "0.25 - 0.5", "0.5 - 1", "1 - 2")))
wetplot <- ggplot() +
# background countries
#geom_polygon(data=countries_wgs84_df, aes(long, lat, group=group) , fill="grey90") +
# Fw grid
geom_tile(data=flux, aes(x=x, y=y, fill=layer)) +
# country outlines
geom_path(data=countries_wgs84_df, aes(long, lat, group=group), color='black', size=0.01) +
# Tower sites
geom_point(data=bams_towers, aes(Longitude, Latitude), color='black', fill= "red", shape=21,  size=5) +
ggtitle(parse_date_time(str_sub(names(flux_stack[[t]]),2,11), 'ymd')) +
#geom_text(aes(x=-50, y=-10)) +
labs(title = paste("CH4 flux ", str_sub(names(flux_stack[[t]]),2,11), 'ymd'),
subtitle = "Difference tower upscaling % LPJ-MERRA",
caption = "Uscaled from eddy covariance flux towers.\nNote: only showing pixels with >1% wetland area")+
scale_x_continuous(limits=c(-180, 180)) +
scale_y_continuous(limits=c(-60, 80)) +
guides(fill = guide_legend(title = expression(paste("g m"^-2, " month"^-1)))) +
guides(shape = guide_legend(override.aes = list(size = 10))) +
coord_equal() +
gif_map_theme() +
scale_fill_brewer(palette='PRGn') +
# scale_fill_distiller(palette='PRGn', breaks= c(-6, -1, -0.5, -0.1, 0, 0.1, 0.5, 1, 6)) +
#scale_fill_distiller(palette='PRGn', breaks= c(-6, -1, -0.5, -0.1, 0, 0.1, 0.5, 1, 6)) +
# palette='YlOrRd', direction=1,
#scale_fill_manual(values = colorRampPalette(brewer.pal(12, "YlOrRd"))(10), limits = c(-6, 2, 0.5)) +
theme(legend.position=c(0.1, 0.3))
show(wetplot)
}
},  movie.name = "../../output/figures/gif/comparison_up01_lpjmerra.gif", ani.width=2000, ani.height=1000, interval = 0.8, clean=TRUE)
dev.off()
wetplot <- ggplot() +
# background countries
#geom_polygon(data=countries_wgs84_df, aes(long, lat, group=group) , fill="grey90") +
# Fw grid
geom_tile(data=flux, aes(x=x, y=y, fill=layer)) +
# country outlines
geom_path(data=countries_wgs84_df, aes(long, lat, group=group), color='black', size=0.01) +
# Tower sites
geom_point(data=bams_towers, aes(Longitude, Latitude), color='black', fill= "red", shape=21,  size=5) +
ggtitle(parse_date_time(str_sub(names(flux_stack[[t]]),2,11), 'ymd')) +
#geom_text(aes(x=-50, y=-10)) +
labs(title = paste("CH4 flux ", str_sub(names(flux_stack[[t]]),2,11), "\nDifference tower upscaling % LPJ-MERRA"),
#subtitle = "Difference tower upscaling % LPJ-MERRA",
caption = "Uscaled from eddy covariance flux towers.\nNote: only showing pixels with >1% wetland area")+
scale_x_continuous(limits=c(-180, 180)) +
scale_y_continuous(limits=c(-60, 80)) +
guides(fill = guide_legend(title = expression(paste("g m"^-2, " month"^-1)))) +
guides(shape = guide_legend(override.aes = list(size = 10))) +
coord_equal() +
gif_map_theme() +
scale_fill_brewer(palette='PRGn') +
# scale_fill_distiller(palette='PRGn', breaks= c(-6, -1, -0.5, -0.1, 0, 0.1, 0.5, 1, 6)) +
#scale_fill_distiller(palette='PRGn', breaks= c(-6, -1, -0.5, -0.1, 0, 0.1, 0.5, 1, 6)) +
# palette='YlOrRd', direction=1,
#scale_fill_manual(values = colorRampPalette(brewer.pal(12, "YlOrRd"))(10), limits = c(-6, 2, 0.5)) +
theme(legend.position=c(0.1, 0.3))
show(wetplot)
#ani.options("convert")
saveGIF({
# loop through hyde years ======================================================
for (t in 1:(length(names(flux_stack)))){
# #  percentage wetland
flux <- as(flux_stack[[t]], "SpatialPixelsDataFrame")
flux <- as.data.frame(flux)
names(flux) <- c("layer","x","y")
#flux <- flux[flux$layer > 0,]
#flux$layer <- flux$layer * 100
# # convert to discontinuous
my_breaks =  c(-8,-1,-0.5, -0.25,0, 0.25, 0.5, 1, 2)  # seq(-10, 10, 0.5)
flux$layer <- cut(flux$layer, breaks = my_breaks, dig.lab=10)
#
# # replace the categories stings to make them nicer in the legend
flux$layer <- gsub("\\(|\\]", "", flux$layer)
flux$layer <- gsub("\\,", " - ", flux$layer)
# surv_data <- surv_data %>% mutate(hces_surv_asprcfao_cut=ifelse(hces_surv_asprcfao_cut=="400 to 500000",
#                                                                 "over 400",hces_surv_asprcfao_cut))
# surv_data <- surv_data %>% mutate(hces_surv_asprcfao_cut=ifelse(hces_surv_asprcfao_cut=="-10000 to 0",
#                                                                 "Negative",hces_surv_asprcfao_cut))
flux$layer <- factor(flux$layer , levels=rev(c("-8 - -1", "-1 - -0.5", "-0.5 - -0.25",
"-0.25 - 0",  "0.25 - 0.5", "0.5 - 1", "1 - 2")))
wetplot <- ggplot() +
# background countries
#geom_polygon(data=countries_wgs84_df, aes(long, lat, group=group) , fill="grey90") +
# Fw grid
geom_tile(data=flux, aes(x=x, y=y, fill=layer)) +
# country outlines
geom_path(data=countries_wgs84_df, aes(long, lat, group=group), color='black', size=0.01) +
# Tower sites
geom_point(data=bams_towers, aes(Longitude, Latitude), color='black', fill= "red", shape=21,  size=5) +
ggtitle(parse_date_time(str_sub(names(flux_stack[[t]]),2,11), 'ymd')) +
#geom_text(aes(x=-50, y=-10)) +
labs(title = paste("CH4 flux ", str_sub(names(flux_stack[[t]]),2,11), "\nDifference tower upscaling % LPJ-MERRA"),
#subtitle = "Difference tower upscaling % LPJ-MERRA",
caption = "Uscaled from eddy covariance flux towers.\nNote: only showing pixels with >1% wetland area")+
scale_x_continuous(limits=c(-180, 180)) +
scale_y_continuous(limits=c(-60, 80)) +
guides(fill = guide_legend(title = expression(paste("g m"^-2, " month"^-1)))) +
guides(shape = guide_legend(override.aes = list(size = 10))) +
coord_equal() +
gif_map_theme() +
scale_fill_brewer(palette='PRGn') +
# scale_fill_distiller(palette='PRGn', breaks= c(-6, -1, -0.5, -0.1, 0, 0.1, 0.5, 1, 6)) +
#scale_fill_distiller(palette='PRGn', breaks= c(-6, -1, -0.5, -0.1, 0, 0.1, 0.5, 1, 6)) +
# palette='YlOrRd', direction=1,
#scale_fill_manual(values = colorRampPalette(brewer.pal(12, "YlOrRd"))(10), limits = c(-6, 2, 0.5)) +
theme(legend.position=c(0.1, 0.3))
show(wetplot)
}
},  movie.name = "../../output/figures/gif/comparison_up01_lpjmerra.gif", ani.width=2000, ani.height=1000, interval = 0.8, clean=TRUE)
dev.off()
diff_hist <- ggplot() +
# Fw grid
geom_histogram(data=as.data.frame(flux_stack[[t]]), aes(x=x, y=y, fill=layer))
diff_hist
diff_hist <- ggplot() +
# Fw grid
geom_histogram(data=as.data.frame(flux_stack[[t]]), aes(x=x, y=y, fill=layer))
diff_hist
as.data.frame(flux_stack[[t]])
str(as.data.frame(flux_stack[[t]]))
flux <- as(flux_stack[[t]], "SpatialPixelsDataFrame")
flux <- as.data.frame(flux)
names(flux) <- c("layer","x","y")
diff_hist <- ggplot() +
# Fw grid
geom_histogram(data=as.data.frame(flux_stack[[t]]), aes(x=x, y=y, fill=layer))
diff_hist <- ggplot() + geom_histogram(data=flux, aes(x=x, y=y, fill=layer))
diff_hist
diff_hist <- ggplot() + geom_histogram(data=flux, aes(x=layer, fill=layer))
diff_hist
diff_hist <- ggplot() + geom_histogram(data=flux, aes(x=layer, fill=layer), bins=100)
diff_hist
sum_raster(mch4e[[t]] * pixarea)
sum_raster <- function(raster){sum(cellStats(raster, stat="sum"))}
sum_raster(mch4e[[t]] * pixarea * 10^6)
crs(pixarea)
crs(mch4e[[t]])
crs(pixarea) <- crs(mch4e[[t]])
crs(pixarea) <- crs(mch4e)
sum_raster(mch4e[[t]] * pixarea * 10^6)
res(pixarea)
pixarea <- area(mch4e)
pixarea
crs(pixarea) <- crs(mch4e)
sum_raster(mch4e[[t]] * pixarea * 10^6)
sum_raster(mch4e[[t]] * (pixarea * 10^6)) / 1e-12
sum_raster(mch4e[[t]] * (pixarea * 10^6)) / 1e+12
sum_raster(mch4e[[t]] * (pixarea * 10^6)) / 1e+12
sum_raster(upscaled_flux[[t]] * (pixarea * 10^6)) / 1e+12
row <- data.frame(lpj = sum_raster(mch4e[[t]] * (pixarea * 10^6)) / 1e+12,
upscale=sum_raster(upscaled_flux[[t]] * (pixarea * 10^6)) / 1e+12 )
row
row <- data.frame(t=names(mch4e[[1]]),
lpj = sum_raster(mch4e[[t]] * (pixarea * 10^6)) / 1e+12,
upscale=sum_raster(upscaled_flux[[t]] * (pixarea * 10^6)) / 1e+12 )
row
row <- data.frame(t=names(upscaled_flux[[1]]),
lpj = sum_raster(mch4e[[t]] * (pixarea * 10^6)) / 1e+12,
upscale=sum_raster(upscaled_flux[[t]] * (pixarea * 10^6)) / 1e+12 )
row
library(raster)
library(MODIS)
library(here)
library(lubridate)
here::here()
MODISoptions()
getProduct("MOD11C3")  #  ("MOD11A2")("MOD11C1")
# diff MOD11 products:
# https://modis.gsfc.nasa.gov/data/dataprod/mod11.php
d1 = "2000-02-01"
d2 = "2000-02-28"
LST_Night_CMG_stack <- raster::stack()
for (i in seq(123,131)){
#for (i in seq(123,201)){
#for (i in seq(119,201)){
startdate <- ymd(d1) %m+% months(i) #years(i)
enddate <- ymd(d2) %m+% months(i) #years(i+1)
print(paste0("start date:   ", startdate))
print(paste0("enddate date: ", enddate))
# # download data MOD11C3 Monthly CMG LST
LST_Night_CMG = runGdal("MOD11C3",
collection = "006",
#job="upscale",
tileH = 8, tileV = 7,
begin = startdate, end = enddate,
SDSstring = "00000100000000000")
l <- unlist(LST_Night_CMG)
#paste(c(strsplit(",MOD11C3.006.2000.04.01", split="[.]")[[1]][3:5]),"-")
# convert to raster stacks
st <- raster::stack(l)
names(st) <- c(names(LST_Night_CMG$MOD11C3.006))
print(names(st))
# aggregate to 0.25 deg resolution
# convert to Celcius
y <- aggregate(st, fact=5, fun=mean, expand=TRUE, na.rm=TRUE) * 0.02 - 273
# add to stack
LST_Night_CMG_stack <- raster::stack(LST_Night_CMG_stack, y)
}
library(ncdf4)
library(R.utils)
library(raster)
library(gridExtra)
library(latticeExtra)
library(grid)
library(ggplot2)
library(animation)
library(maptools)
library(animation)
library(rgdal)
library(here)
library(lubridate)
library(stringr)
# set wd
here()
#==============================================================================#
### make raster sum function (shorten) -----------------------------------------
#==============================================================================#
sum_raster <- function(raster){sum(cellStats(raster, stat="sum"))}
upscaled_stack_tg_month <- readRDS('../../output/results/upscaled_stack_tg_permonth.rds')
#
upscale_dates <- c(lapply(names(upscaled_stack_tg_month), function(x) parse_date_time(str_sub(x, -10, -1), 'ymd')))
upscale_dates <- do.call("c", upscale_dates)
###  Get LPJ   data              -----------------------------------------------
# read the netcdf
d <- '../../data/lpj_mmch4e/LPJ_mmch4e_2000-2017_MERRA2.nc'
# varname: mch4e
# var units: g CH4 /m2 /month
# time: "months since 1860-1-1 00:00:00"
# open netcdf file
e <- nc_open(d)
# get lpj times
lpj_time <- parse_date_time("1860-1-1", "ymd")  %m+% months(e$dim$time$vals)
# read wet fraction as raster brick
# subset the lpj rasters to those matching upscaled
mch4e <-brick(d, varname="mch4e")[[which(lpj_time %in% upscale_dates)]]
area_0.5_m2 <- area(mch4e) * 10e+6
mch4e_tg_month <- mch4e * area_0.5_m2 / 10e+9
tg_month_total <- data.frame()
for (i in seq(1, length(names(upscaled_stack_tg_month)))){
date = parse_date_time(str_sub(names(upscaled_stack_tg_month)[i], -10, -1),"ymd")
row <- data.frame(t= date,
upscaled_tg_tot = sum_raster(upscaled_stack_tg_month[[i]]),
lpj_tg_tot = sum_raster(mch4e_tg_month[[i]]))
tg_month_total <- rbind(tg_month_total, row)
}
tg_month_total
area_0.5_m2
mch4e_tg_month <- mch4e * area_0.5_m2 / 10e+12
tg_month_total <- data.frame()
for (i in seq(1, length(names(upscaled_stack_tg_month)))){
date = parse_date_time(str_sub(names(upscaled_stack_tg_month)[i], -10, -1),"ymd")
row <- data.frame(t= date,
upscaled_tg_tot = sum_raster(upscaled_stack_tg_month[[i]]),
lpj_tg_tot = sum_raster(mch4e_tg_month[[i]]))
tg_month_total <- rbind(tg_month_total, row)
}
tg_month_total
tg_month_total %>% gather(source, value, upscaled_tg_tot:lpj_tg_tot)
library(tidyr)
tg_month_total %>% gather(source, value, upscaled_tg_tot:lpj_tg_tot)
tg_month_total <- tg_month_total %>% gather(source, value, upscaled_tg_tot:lpj_tg_tot)
ggplot(tg_month_total) +
geom_line(aes(x=t, y=value, group=source))
ggplot(tg_month_total) +
geom_line(aes(x=t, y=value, color=source))
library(ggplot2)
# declare theme elements
custom_catch_trend_line_theme <- theme_bw() +
theme(text = element_text(size=7, colour='black'),
strip.text = element_text(size=7, face='bold'),
strip.background = element_blank(),
legend.background = element_blank(),
legend.key.size = unit(3, "mm"),
legend.text = element_text(size = 7),
legend.title=element_blank(),
#legend.position = c(0.8, 0.8),
legend.justification = "left",
legend.direction = 'vertical',
#axis.line = element_blank(),
axis.line = element_line(colour = "black", size=0.25),
axis.text = element_text(size=7, colour='black'),
axis.ticks = element_line(colour='black', size=0.2),
panel.grid = element_blank(),
#panel.border = element_rect(colour = "black", fill=NA, size=0.25),
panel.border = element_rect(colour = "black", size=0.25), # element_blank(),
panel.background = element_blank())
#legend.title = element_blank(),
#legend.background = element_rect(colour = NA),
#title.theme = element_blank(),
#legend.key = element_blank(),
#element_rect(colour = "black", size=0.2),
#element_text(size = 8),
ggplot(tg_month_total) +
geom_line(aes(x=t, y=value, color=source)) +
custom_catch_trend_line_theme
ggplot(tg_month_total) +
geom_line(aes(x=t, y=value, color=source)) +
custom_catch_trend_line_theme +
xlab("") + ylab("Global monthly CH4 emission (Tg / month")
getwd()
ggsave("../../output/figures/global_tg_monthly_2010_2012.png",
width=90, height=80, dpi=600, units='mm', type = "cairo-png")
ggplot(tg_month_total) +
geom_line(aes(x=t, y=value, color=source)) +
custom_catch_trend_line_theme +
theme(legend.position = "top") +
xlab("") + ylab("Global monthly CH4 emission (Tg / month")
ggsave("../../output/figures/global_tg_monthly_2010_2012.png",
width=90, height=80, dpi=600, units='mm', type = "cairo-png")
ggplot(tg_month_total) +
geom_line(aes(x=t, y=value, color=source)) +
custom_catch_trend_line_theme +
theme(legend.position = "top") +
scale_color_distiller(palette = "BlRd")+
xlab("") + ylab("Global monthly CH4 emission (Tg / month")
ggplot(tg_month_total) +
geom_line(aes(x=t, y=value, color=source)) +
custom_catch_trend_line_theme +
theme(legend.position = "top") +
scale_color_distiller(palette = "RdBl")+
xlab("") + ylab("Global monthly CH4 emission (Tg / month")
ggplot(tg_month_total) +
geom_line(aes(x=t, y=value, color=source)) +
custom_catch_trend_line_theme +
theme(legend.position = "top") +
#scale_color_distiller(palette = "RdBl")+
xlab("") + ylab("Global monthly CH4 emission (Tg / month")
library(ncdf4)
library(R.utils)
library(raster)
library(gridExtra)
library(latticeExtra)
library(grid)
library(ggplot2)
library(animation)
library(maptools)
library(animation)
library(rgdal)
library(here)
library(lubridate)
library(stringr)
# set wd
here()
source("./get_country_bbox_shp_for_ggplot_map.r")
#  get tower locations
bams_towers <- read.csv("../../data/towers/BAMS_site_coordinates.csv")
xy <- bams_towers[,c(3,4)]
bams_towers <- SpatialPointsDataFrame(coords = xy, data = bams_towers,
proj4string = crs(masked_flux_stack))
bams_towers <- data.frame(bams_towers)
# prep gif plottin theme         ----------------------------------------------------
gif_map_theme <- function(base_size=48){
theme_minimal() +
theme(legend.position=c(0.1, 0.4),
#legend.title = element_blank(),
legend.title=element_text(size=40),
legend.text=element_text(size=40),
plot.title = element_text(hjust = 0.5, face="bold", size = 40),
legend.key.size = unit(10, "mm"),
axis.line = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) }
masked_flux_stack <- readRDS('../../output/results/upscaled_stack_flux_g_m2_month.rds')
saveGIF({
# loop through hyde years ======================================================
for (t in 1:(length(names(masked_flux_stack)))){
# #  percentage wetland
flux <- as(masked_flux_stack[[t]], "SpatialPixelsDataFrame")
flux <- as.data.frame(flux)
names(flux) <- c("layer","x","y")
#flux <- flux[flux$layer > 0,]
#flux$layer <- flux$layer * 100
# # convert to discontinuous
# my_breaks = seq(0,400,50)
# flux$layer <- cut(flux$layer, breaks = my_breaks, dig.lab=10)
#
# # replace the categories stings to make them nicer in the legend
# flux$layer <- gsub("\\(|\\]", "", flux$layer)
# flux$layer <- gsub("\\,", "-", flux$layer)
wetplot <- ggplot() +
# background countries
geom_polygon(data=countries_wgs84_df, aes(long, lat, group=group) , fill="grey90") +
# Fw grid
geom_tile(data=flux, aes(x=x, y=y, fill=layer)) +
# country outlines
geom_path(data=countries_wgs84_df, aes(long, lat, group=group), color='black', size=0.01) +
# Tower sites
geom_point(data=bams_towers, aes(Longitude, Latitude), color='black', fill= "green", shape=21,  size=6) +
ggtitle(parse_date_time(str_sub(names(masked_flux_stack[[t]]),-10,-1), 'ymd')) +
#geom_text(aes(x=-50, y=-10)) +
labs(title = paste("CH4 emission", str_sub(names(masked_flux_stack[[t]]),-10,-1), 'ymd'),
#subtitle = "Uscaled from 35? eddy covariance flux towers",
caption = "Uscaled from eddy covariance flux towers.\nNote: only showing pixels with >1% wetland area")+
#x = "year", y = "team runs per game")
scale_x_continuous(limits=c(-180, 180))+
scale_y_continuous(limits=c(-60, 80))+
guides(fill = guide_legend(title = expression(paste("g m"^-2, " month"^-1)))) +
#guides(fill = guide_legend(title = expression(paste("nmols m"^-2, " s"^-1)))) +
guides(shape = guide_legend(override.aes = list(size = 10))) +
coord_equal() +
gif_map_theme() +
#scale_fill_gradient(low="yellow", high="red", limits=c(0, 15)) +
scale_fill_distiller(palette='YlOrRd', direction=1, limits=c(0, 15), breaks=seq(0,15,1))+
#labels=c(0,NA,NA,NA,NA,5,NA,NA,NA,NA,10,NA,NA,NA,NA,15)) +
#scale_fill_manual(values = colorRampPalette(brewer.pal(12, "YlOrRd"))(10), limits = c(0,400)) +
theme(legend.position=c(0.1, 0.3))
show(wetplot)
}
},  movie.name = "../../output/figures/gif/flux_upscale_v01_2yrs.gif", ani.width=2000, ani.height=1000, interval = 0.8, clean=TRUE)
dev.off()
